{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mluck\\\\git\\\\nv_4\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/base/Base.css';\nimport TopNavbar from './components/base/TopNavbar';\nimport ScrollingBanner from './components/base/ScrollingBanner';\nimport StaticBanner from './components/base/StaticBanner';\nimport GameCardList from './components/home/GameCardList';\nimport BottomFooter from './components/base/BottomFooter';\nReactDOM.render(React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(TopNavbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(\"main\", {\n  role: \"main\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(StaticBanner, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(GameCardList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), React.createElement(BottomFooter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})), document.getElementById('root'));\nlet gamesReq = new XMLHttpRequest();\n\ngamesReq.onreadystatechange = function () {\n  if (gamesReq.readyState === 4 && gamesReq.status === 200) {\n    // On sucessful response\n    console.log(gamesReq.responseText);\n    let parsed = JSON.parse(gamesReq.responseText);\n  } else if (gamesReq.status >= 400) {\n    // Handle errors\n    console.log(\"An error occurred when contacting Cy.io APIs\");\n  }\n};\n\ngamesReq.open(\"GET\");\ngamesReq.send(); // ReactDOM.render(\n//\n// , document.getElementById('card-root'));","map":{"version":3,"sources":["C:\\Users\\mluck\\git\\nv_4\\frontend\\src\\index.js"],"names":["React","ReactDOM","TopNavbar","ScrollingBanner","StaticBanner","GameCardList","BottomFooter","render","document","getElementById","gamesReq","XMLHttpRequest","onreadystatechange","readyState","status","console","log","responseText","parsed","JSON","parse","open","send"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEAL,QAAQ,CAACM,MAAT,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAGI;AAAM,EAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CAHJ,EAQI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,CADJ,EAWMC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXN;AAcA,IAAIC,QAAQ,GAAG,IAAIC,cAAJ,EAAf;;AACAD,QAAQ,CAACE,kBAAT,GAA8B,YAAW;AACrC,MAAIF,QAAQ,CAACG,UAAT,KAAwB,CAAxB,IAA6BH,QAAQ,CAACI,MAAT,KAAoB,GAArD,EAA0D;AAAE;AACxDC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,YAArB;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWV,QAAQ,CAACO,YAApB,CAAb;AAEH,GAJD,MAIO,IAAIP,QAAQ,CAACI,MAAT,IAAmB,GAAvB,EAA2B;AAAE;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH;AACJ,CARD;;AASAN,QAAQ,CAACW,IAAT,CAAc,KAAd;AACAX,QAAQ,CAACY,IAAT,G,CAEA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/base/Base.css';\r\nimport TopNavbar from './components/base/TopNavbar';\r\nimport ScrollingBanner from './components/base/ScrollingBanner';\r\nimport StaticBanner from './components/base/StaticBanner';\r\nimport GameCardList from './components/home/GameCardList';\r\nimport BottomFooter from './components/base/BottomFooter';\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <TopNavbar/>\r\n\r\n        <main role=\"main\">\r\n            <StaticBanner/>\r\n            <GameCardList/>\r\n        </main>\r\n\r\n        <BottomFooter/>\r\n    </div>\r\n    , document.getElementById('root'));\r\n\r\n\r\nlet gamesReq = new XMLHttpRequest();\r\ngamesReq.onreadystatechange = function() {\r\n    if (gamesReq.readyState === 4 && gamesReq.status === 200) { // On sucessful response\r\n        console.log(gamesReq.responseText);\r\n        let parsed = JSON.parse(gamesReq.responseText);\r\n\r\n    } else if (gamesReq.status >= 400){ // Handle errors\r\n        console.log(\"An error occurred when contacting Cy.io APIs\");\r\n    }\r\n};\r\ngamesReq.open(\"GET\", );\r\ngamesReq.send();\r\n\r\n// ReactDOM.render(\r\n//\r\n// , document.getElementById('card-root'));\r\n\r\n"]},"metadata":{},"sourceType":"module"}